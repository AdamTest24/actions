name: 'setup-lesson-deps'
description: 'Action to set up package dependencies for Carpentries Lessons'
author: 'Zhian N. Kamvar'
inputs:
  cache-version:
    description: 'The version of the cache, change this from the default (1) to start over with a fresh cache'
    required: true
    default: 1
runs:
  using: "composite"
  steps:
      - name: "Restore {renv} Cache"
        uses: actions/cache@v2
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-${{ inputs.cache-version }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys:
            ${{ runner.os }}-${{ inputs.cache-version }}-renv-

      - name: "Setup System Dependencies"
        shell: Rscript {0}
        run: |
          # Set up system dependencies
          req <- function(pkg) {
            if (!requireNamespace(pkg, quietly = TRUE)) 
              install.packages(pkg, repos = "https://cran.rstudio.com")
          }
          wd <- '${{ github.workspace }}'
          has_lock <- file.exists(file.path(wd, 'renv'))
          if (Sys.info()[["sysname"]] == "Linux" && has_lock) {
            req("renv")
            req("remotes")
            req("desc")
            remotes::install_github("zkamvar/vise")
            Sys.setenv("RENV_PROFILE" = "lesson-requirements")
            vise::ci_sysreqs(renv::paths$lockfile(), execute = TRUE)
          }
      - name: "Fortify Local {renv} Packages"
        shell: Rscript {0}
        run: |
          # Fortify local {renv} packages
          wd <- '${{ github.workspace }}'
          req <- function(pkg) {
            if (!requireNamespace(pkg, quietly = TRUE)) 
              install.packages(pkg, repos = "https://cran.rstudio.com")
          }
          if (file.exists(file.path(wd, 'renv'))) {
            req("renv")
            req("pak")
            Sys.setenv("RENV_PROFILE" = "lesson-requirements")
            lock <- renv:::lockfile(renv::paths$lockfile())$data()
            pkgs <- names(lock$Packages)
            if (Sys.info()[["sysname"]] == "Linux") {
              options(repos = c(RSPM = Sys.getenv("RSPM"), getOption("repos")))
            }
            # Use pak for cached installation. This will fail for some github
            # packages, but that is okay, manage_deps will take care of the rest
            tryCatch(pak::pkg_install(pkgs, upgrade = FALSE, dependencies = FALSE),
              error = function(e) {
                message("START ===")
                message("an installation error was found, maybe due to being on github")
                message(e$message)
                message("END =====")
            })
            sandpaper::manage_deps(path = wd, quiet = FALSE)
          } else {
            writeLines("Package cache not used")
          }

      - name: Don't use tar 1.30 from Rtools35 to store the cache
        shell: bash
        run: |
          if command -v /c/Rtools/bin/tar && /c/Rtools/bin/tar --version | grep -q 'tar (GNU tar) 1.30'
            then echo 'C:/Program Files/Git/usr/bin' >> $GITHUB_PATH
          fi
