name: 'setup-lesson-deps'
description: 'Action to set up package dependencies for Carpentries Lessons'
author: 'Zhian N. Kamvar'
inputs:
  cache-version:
    description: 'The version of the cache, change this from the default (1) to start over with a fresh cache'
    required: true
    default: 1
runs:
  using: "composite"
  steps:
      - name: "Restore {renv} Cache"
        uses: actions/cache@v2
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-${{ inputs.cache-version }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys:
            ${{ runner.os }}-${{ inputs.cache-version }}-renv-

      # NOTE: Right here, I need to write a jq script that will extract the
      #       packages needed for the lesson and pass it to R so that I can 
      #       install the dependencies for these packages.
      - name: "Setup System Dependencies"
        shell: Rscript {0}
        run: |
          if (Sys.info()[["sysname"]] == "Linux") {
            if (!requireNamespace("renv")) {
              install.packages("renv", repos = "https://cran.rstudio.com")
            }
            if (!requireNamespace("pak")) {
              install.packages("pak", repos = "https://r-lib.github.io/p/pak/stable/")
            }
            Sys.setenv("RENV_PROFILE" = "lesson-requirements")
            lock <- renv:::lockfile(renv::paths$lockfile())$data()
            pkgs <- names(lockfile$data()$Packages)
            comp <- Filter(function(x) packageDescription(x)$NeedsCompilation == "yes", pkgs)
            for (dep in comp) {
              pak::pkg_system_requirements(dep, execute = TRUE)
            }
          }
      - name: "Fortify Local {renv} Packages"
        shell: Rscript {0}
        run: |
          wd <- '${{ github.workspace }}'
          if (file.exists(file.path(wd, 'renv'))) {
            sandpaper::manage_deps(path = wd, quiet = FALSE)
          } else {
            writeLines("Package cache not used")
          }

      - name: Don't use tar 1.30 from Rtools35 to store the cache
        shell: bash
        run: |
          if command -v /c/Rtools/bin/tar && /c/Rtools/bin/tar --version | grep -q 'tar (GNU tar) 1.30'
            then echo 'C:/Program Files/Git/usr/bin' >> $GITHUB_PATH
          fi
